name: Flutter CI

# This workflow is triggered on pushes to the repository.
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Cache
    - name: Cache
      uses: actions/cache@v2.0.0
      id: cache
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
          ~/cache
          ~/development/flutter/.pub-cache
          ~/.gradle
          **/node_modules
          build/
          /opt/hostedtoolcache/flutter/1.20.0-2.0.pre-dev/x64
          /opt/hostedtoolcache/jdk/12.0.2/x64
        key: key2

    - uses: actions/checkout@v1

    # Setup Java environment in order to build the Android app.
    - name: Java
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
  
    # Setup the flutter environment.
    - name: Flutter action
      if: steps.cache.outputs.cache-hit != 'true'
      uses: subosito/flutter-action@v1.3.2
      with:
        # The Flutter version to make available on the path
        flutter-version: 1.20.0-2.0.pre # optional
        # The Flutter build release channel
        channel: dev # optional, default is stable

    # Get flutter dependencies.
    - name: Flutter dependencies
      run: flutter pub get

    # Get the secrets
    - name: Inject Secrets
      run: gpg --quiet --batch --yes --decrypt --passphrase="$GOOGLE_SERVICES" --output android/app/google-services.json android/app/google-services.json.gpg
      env:
        GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

    # Statically analyze the Dart code for any errors.
    - name: Analyze Code
      run: flutter analyze .
    
    # Build apk.
    - name: Build Android APK
      run: flutter build apk --release --split-per-abi --obfuscate --split-debug-info build/debug --shrink --tree-shake-icons

    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        path: build/app/outputs/flutter-apk/*.apk

    # Enable Web Support
    - name: Enable Web Support
      run: flutter config --enable-web

    # Build web.
    - name: Build Web
      run: flutter build web --release --tree-shake-icons
  
    # Publish web to firebase
    - name: Deploy Web
      uses: w9jds/firebase-action@v1.5.0
      with:
          args: deploy --token "$FIREBASE_TOKEN"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
